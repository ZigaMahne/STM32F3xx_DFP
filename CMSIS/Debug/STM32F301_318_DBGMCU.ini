// File: STM32F301_318_DBGMCU.ini
// Version: 1.0.0
// Note: refer to STM32F301x6/8, STM32F318x8 Reference manual (RM0366)
//       refer to STM32F301x6/8, STM32F318x8 datasheet


/* variable to hold register values */
define unsigned long DbgMCU_CR;
define unsigned long DbgMCU_APB1_Fz;
define unsigned long DbgMCU_APB2_Fz;


// <<< Use Configuration Wizard in Context Menu >>>

// <h> Debug MCU configuration register (DBGMCU_CR)
//                                   <i> Reserved bits must be kept at reset value
//   <o.6..7> TRACE_MODE             <i> Trace Mode
//      <0=> Asynchronous
//   <o.5>  TRACE_IOEN               <i> Trace I/O enable
//   <o.2>  DBG_STANDBY              <i> Debug standby mode
//   <o.1>  DBG_STOP                 <i> Debug stop mode
//   <o.0>  DBG_SLEEP                <i> Debug sleep mode
// </h>
DbgMCU_CR = 0x00000007;

// <h> Debug MCU APB1 freeze register (DBGMCU_APB1_FZ)
//                                   <i> Reserved bits must be kept at reset value
//   <o.30> DBG_I2C3_SMBUS_TIMEOUT   <i> SMBUS timeout mode stopped when core is halted
//   <o.22> DBG_I2C2_SMBUS_TIMEOUT   <i> SMBUS timeout mode stopped when core is halted
//   <o.21> DBG_I2C1_SMBUS_TIMEOUT   <i> SMBUS timeout mode stopped when core is halted
//   <o.12> DBG_IWDG_STOP            <i> Independent watchdog stopped when core is halted
//   <o.11> DBG_WWDG_STOP            <i> Window watchdog stopped when core is halted
//   <o.10> DBG_RTC_STOP             <i> RTC stopped when core is halted
//   <o.4>  DBG_TIM6_STOP            <i> TIM6 counter stopped when core is halted
//   <o.0>  DBG_TIM2_STOP            <i> TIM2 counter stopped when core is halted
// </h>
DbgMCU_APB1_Fz = 0x00000000;

// <h> Debug MCU APB2 freeze register (DBGMCU_APB2_FZ)
//                                   <i> Reserved bits must be kept at reset value
//   <o.4>  DBG_TIM17_STOP           <i> TIM17 counter stopped when core is halted
//   <o.3>  DBG_TIM16_STOP           <i> TIM16 counter stopped when core is halted
//   <o.2>  DBG_TIM15_STOP           <i> TIM15 counter stopped when core is halted
//   <o.0>  DBG_TIM1_STOP            <i> TIM1 counter stopped when core is halted
// </h>
DbgMCU_APB2_Fz = 0x00000000;

// <<< end of configuration section >>>


/*----------------------------------------------------------------------------
  Setup_TracePins()  configure the used trace pins
 *----------------------------------------------------------------------------*/
FUNC void Setup_TracePins (unsigned char trace_mode) {

  if (trace_mode == 0) {           /* asynchronous mode */
          /* configure SWO (PB3) */
          _WDWORD(0x40021014, ( _RDWORD(0x40021014)                | 0x00040000) );  // RCC_AHBENR: IO port B clock enable
          _WDWORD(0x48000400, ((_RDWORD(0x48000400) & ~0x000000C0) | 0x00000080) );  // GPIOx_MODER:   Set Mode (Alternate Function)
          _WDWORD(0x48000408, ((_RDWORD(0x48000408)              ) | 0x000000C0) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
          _WDWORD(0x4800040C, ((_RDWORD(0x4800040C) & ~0x000000C0)             ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
          _WDWORD(0x48000420, ((_RDWORD(0x48000420) & ~0x0000F000)             ) );  // GPIOx_AFRL:    Alternate Function to AF0
  }

}

/*----------------------------------------------------------------------------
  Setup_DBGMCU()  configure DBGMCU registers
 *----------------------------------------------------------------------------*/
FUNC void Setup_DBGMCU (void) {

  if (DbgMCU_CR & (1 << 5)){
    Setup_TracePins (((DbgMCU_CR >> 6) & 3));
  }

  _WDWORD(0xE0042004, DbgMCU_CR);                           // Set DBGMCU_CR
  _WDWORD(0xE0042008, DbgMCU_APB1_Fz);                      // Set DBGMCU_APB1_FZ
  _WDWORD(0xE004200C, DbgMCU_APB2_Fz);                      // Set DBGMCU_APB2_FZ
}


/*----------------------------------------------------------------------------
  OnResetExec()  Executed after reset via uVision's 'Reset'-button
 *----------------------------------------------------------------------------*/
FUNC void OnResetExec (void) {
  Setup_DBGMCU();
}

Setup_DBGMCU();                                           // Debugger Setup
